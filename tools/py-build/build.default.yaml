project:
    # Name of the program
    # Used for the final name of the executable/library
    name: 'game_engine'

    # Version and authors info
    authors: ['author <anon@example.com>']
    version: '0.1.0'

    # Supported: 'c' and 'cpp'
    language: 'c'

    dirs:
        # Target destination path for the binary/library
        # NOTE: if any profiles are specified
        # their names will be appended to this path
        # like 'target/debug' and 'target/release'
        target: 'target'

        # Intermediate build directory. Object files and so on.
        build: 'build'

        # Include directories
        # NOTE: These are not supposed to be used
        # for dependencies.
        include: 'include'

        # Sources for the project
        source: 'src'

        # Dependencies and vendor libraries
        deps: 'vendor'

    setup:
        # What files to build?
        # NOTE:
        # If none are provided, the tool will default
        # to globbing the source and include directories
        files:
            # Relative to `dirs:source`
            sources: []

            # Relative to `dirs:include`
            include: []

        # Supported types of final output
        # 'lib' for static library
        # 'dll' for shared library
        # 'exe' for executable
        type: 'exe'

        # Path to the compiler. Can be truncated
        # to just the name itself, if present in $PATH
        compiler: 'gcc'

        # Profiles, you can specify as many or as few as you wish.
        profiles:
            # Each item of the profiles list contains builds flags.
            # Therefore, if you wish to include any additional build flags
            # You have to have at least one profile.
            #
            # NOTE: the name of the profile also gets appended to the target directory.
            # when building
            debug: ['-Og', 'std=c17', '-Wall', '-Wextra']

    dependencies:
        # Name for the package
        # NOTE: used for resolving the path to a given dep
        example:
            # if disabled, then everything is ignored
            enabled: true

            # Paths relative to `dirs:deps`
            paths:
                # Include/header directory
                include: 'include'

                # Path to libraries
                # can be omitted `header_only` is true
                lib: 'lib'

            # if true, skips the lookup for library directories
            # if false, the `libs` and `args` keys can be omitted
            header_only: false

            # Names of libraries that are supposed to be included in the compilation
            libs:
                - 'libexample.so'
                - 'libshared.dll'
                - 'libstatic.a'
                - 'libstatic2.lib'

            # Additional arguments provided to the command-line when building
            # They're basically `-lX` where X is the array item here.
            args:
                - '-lexample'
